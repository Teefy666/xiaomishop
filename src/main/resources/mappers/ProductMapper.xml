<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace配置为数据访问层的接口的 包名.接口名称  -->
<mapper namespace="com.example.mapper.ProductMapper">

    <select id="getProducts" resultType="java.util.HashMap">
        select p.*, pt.name typename
        from product p
                 left join producttype pt on p.typeid = pt.id
    </select>

    <select id="getProductByPage" resultType="java.util.HashMap">
        select p.*, pt.name typename from product p
        left join producttype pt on p.typeid = pt.id
        <where>
            <if test="name!=null and name!=''">
                <bind name="name" value="'%'+name+'%'"></bind>
                and p.name like #{name}
            </if>
            <if test="typeid!=-1">
                and typeid = #{typeid}
            </if>
        </where>
        order by date DESC
        limit #{pageStart}, #{pageSize}
    </select>

    <select id="getRowCount" resultType="int">
        select count(1) from product
        <where>
            <if test="name!=null and name!=''">
                <bind name="name" value="'%'+name+'%'"></bind>
                and name like #{name}
            </if>
            <if test="typeid!=-1">
                and typeid = #{typeid}
            </if>
        </where>
    </select>

    <delete id="delProductById" parameterType="int">
        delete
        from product
        where id = #{id}
    </delete>

    <delete id="delBatchProduct">
        delete from product where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <insert id="addProduct" parameterType="com.example.entity.Product">
        insert into product value (null, #{name}, #{content}, #{price}, #{image}, #{number}, #{typeid}, #{date})
    </insert>

    <select id="getProductById" parameterType="int" resultType="com.example.entity.Product">
        select *
        from product
        where id = #{id}
    </select>

    <update id="updateProduct" parameterType="com.example.entity.Product">
        update product
        <set>
            name=#{name},
            content=#{content},
            price=#{price},
            image=#{image},
            number=#{number},
            typeid=#{typeid},
            date=#{date}
        </set>
        where id=#{id}
    </update>


</mapper>